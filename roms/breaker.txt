clear

: L
0x80 0x80 0x80 0x80 0xF0 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: D
0xF0 0x88 0x88 0x88 0xF0 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: G
0xF8 0x80 0xB8 0x88 0xF8 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: I
0x80 0x80 0x80 0x80 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: mainMenuN
0xC8 0xA8 0xA8 0x98 0x88 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: mainMenuY
0x88 0x50 0x20 0x20 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: P
0xF0 0x90 0xF0 0x80 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: S
0xF8 0x80 0xF8 0x08 0xF8 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: T
0xF8 0x20 0x20 0x20 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: E
0xF0 0x80 0xF0 0x80 0xF0 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: A
0xF8 0x88 0xF8 0x88 0x88 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: M
0xF8 0xA8 0xA8 0xA8 0xA8 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: seven
0xF8 0x08 0x10 0x60 0x40 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: B
0xF8 0x88 0xF0 0x88 0xF8 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: R
0xF8 0x88 0xF8 0xE0 0x98 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: K
0x98 0x90 0xE0 0x90 0x98 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: mainMenuO
0xF8 0x88 0x88 0x88 0xF8 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: mainMenuU
0x88 0x88 0x88 0x88 0xF8 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: Y
0x82 0xC6 0x6C 0x38 0x10 0x10 0x10 0x10 0x10 0x00 0x00 0x00 0x00 0x00 0x00

: O
0xFE 0x82 0x82 0x82 0x82 0x82 0x82 0xFE 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: U
0x82 0x82 0x82 0x82 0x82 0x82 0x82 0xFE 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: W
0x92 0x92 0x92 0x92 0x92 0x92 0x92 0xFE 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: N
0xE2 0xF2 0xB2 0x92 0x92 0x9A 0x9E 0x8E 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# g
: g
0xF0 0x90 0x90 0xF0 0x10 0x90 0xF0 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# a
: a
0xF0 0x90 0x90 0xF0 0x10 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# m
: m
0xF8 0xA8 0xA8 0xA8 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# e
: e
0xF0 0x90 0xF0 0x80 0xF0 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# o
: o
0xF0 0x90 0x90 0x90 0xF0 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# v
: v
0x88 0x88 0xD8 0x70 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# r
: r
0xF0 0x90 0x80 0x80 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: block
  0xff

: paddle
  0xff
  
: ball
  0x80
  
: breakBrick
	0xc0

  
# Temp storage for hundreds, tens and ones
: digits 0 0 0
	

: main
	startMenu
  clear
	:alias score v9
  :alias scoreX va
  :alias scoreY vb
  :alias livesX vc
  :alias livesY vd
  :alias lives vc
  
  drawLives
  score := 0
  updateScore

  vd := 0 # x position
  vc := 5 # y position
  i := block

  loop
    if vc == 19 then jump game
    sprite vd vc 1
    vd += 8
    if vd == 64 begin
    vd := 0
    vc += 2
    end
  again
  
  : game
  	lives := 4
    # draw ball starting position
    :alias ballx v3
    ballx := 32 # ball x position
    :alias bally v4
    bally := 28 # ball y position
    
    :alias dirx v5 # ball x direction
    :alias diry v6
    diry := -1 # ball y direction
    
    i := ball
    sprite ballx bally 1
    
    # paddle starting position
    :alias paddlex v0
    paddlex := 28
    :alias paddley v1
    paddley := 29
    i := paddle
    sprite paddlex paddley 1
    
   : mainLoop
   	resetDirection
    loop # main game loop
      updateBall
      if vf != 0 then updateBricks
      updatePaddle
      if score == 125 then jump wonGame
    again
    
    
####################################################
# 				Lives Functions
####################################################

: drawLives
  livesX := 50
  livesY := 0
  i := ball
	sprite livesX livesY 1
  livesX += 3
  sprite livesX livesY 1
  livesX += 3
  sprite livesX livesY 1
  livesX += 3
  sprite livesX livesY 1
  return
  
: deleteLives
	v7 := lives
	if v7 == 3 begin
  	livesX := 50
    livesY := 0
    sprite livesX livesY 1
  end
  
  if v7 == 2 begin
  	livesX := 53
    livesY := 0
    sprite livesX livesY 1
  end
  
  if v7 == 1 begin
  	livesX := 56
    livesY := 0
    sprite livesX livesY 1
  end
  
  if v7 == 0 begin
  	livesX := 59
    livesY := 0
    sprite livesX livesY 1
  end
  lives := v7
  return
  
####################################################
# 				Movement Functions
####################################################

: updateBall
  i := ball
  sprite ballx bally 1
  if bally == 31 then reset
  if ballx == 63 then dirx := -1
  if ballx == 0 then dirx := 1
  if bally == 0 then diry := 1

  ballx += dirx
  bally += diry
  sprite ballx bally 1
  return

   
: updatePaddle
  
  i := paddle
  sprite paddlex paddley 1
  v7 := 4
  if v7 key then v0 += -2
  v8 := 6
  if v8 key then v0 += 2
  paddlex := v0
  paddley := v1
  sprite paddlex paddley 1
  return


: reset
  bally := paddley
  ballx := paddlex
  diry := -1
  v7 := 1
  lives -= v7
  deleteLives
  if lives == 0 then jump gameOver
  resetDirection
  return
  
: resetDirection
	loop
    v7 := 4
    v8 := 6
    v2 := key
    if v2 == v8 begin
    	dirx := 1
      return
    end
    if v2 == v7 begin
    	dirx := -1
      return
    end
  again
  
  
: paddleReflect
	v2 := paddlex
  v2 += 4
  if ballx == v2 begin
  	dirx := 0
  	diry := -1
  else
  	v7 := 22
  	updateDirection
  end
  return
  

: updateDirection

	if diry == -1 begin
  	diry := 1
  else
  	diry := -1
  end
  if v7 == 22 begin
		if dirx == 0 then jump breakStraight
  end
  
  return
  
: breakStraight
	v7 := v2
  v7 += 3
  
  if ballx > v2 begin
  	if ballx <= v7 then dirx := 1
  end
  
  if ballx < v2 begin
  	if ballx >= paddlex then dirx := -1
  end
  return


####################################################
#					Screen Update Functions
####################################################

: startMenu
v2 := 0
clear
	va := 18
  vb := 8
	i := T
  sprite va vb 8
  va += 6
  i := E
  sprite va vb 6
  va += 5
  i := A
  sprite va vb 6
  va += 6
  i := M
  sprite va vb 6
  va += 8
  i := seven
  sprite va vb 6
  
  va := 10
  vb += 9
  i := B
  sprite va vb 6
  va += 6
  i := R
  sprite va vb 6
  va += 6
  i := E
  sprite va vb 6
  va += 5
  i := A
  sprite va vb 6
   va += 6
  i := K
  sprite va vb 6
   va += 6
  i := mainMenuO
  sprite va vb 6
   va += 6
  i := mainMenuU
  sprite va vb 6
   va += 6
  i := T
  sprite va vb 6
  
  v0 := 0
  loop
  	v0 := key
    if v0 != 0 then return
  again

: updateBricks
	# ball hits paddle
  if bally == 29 begin 
  	paddleReflect
  else # ball hits bricks
  	if bally >= 5 begin
  	updateScore
  	i := breakBrick
    sprite ballx bally 1
    i := ball
    v7 := 0
    updateDirection
    score += 1
    updateScore
  	end
  end
  return
  
: updateScore
	scoreX := 0
  scoreY := 0
	v7 := paddlex
  v8 := paddley
	
	i := digits
  bcd score
  i := digits
  load v2
  
  i := hex v0
  sprite scoreX scoreY 5
  scoreX += 5
  
  i := hex v1
  sprite scoreX scoreY 5
  scoreX += 5
  
  i := hex v2
  sprite scoreX scoreY 5
  scoreX += 5
  
  va := 0
  paddlex := v7
  paddley := v8
  return

: wonGame
	clear
	va := 22
  vb := 8
	i := Y
  sprite va vb 8
  va += 8
  i := O
  sprite va vb 8
  va += 8
  i := U
  sprite va vb 8
  
  va := 22
  vb += 9
  i := W
  sprite va vb 8
  va += 8
  i := O
  sprite va vb 8
  va += 8
  i := N
  sprite va vb 8
  
  loop
    v2 := 0
    v2 := key
    if v2 != 0 then jump endGame
  again
  
  
: gameOver
	clear
	va := 22
  vb := 8
	i := g
  sprite va vb 8
  va += 5
  i := a
  sprite va vb 6
  va += 5
  i := m
  sprite va vb 6
  va += 6
  i := e
  sprite va vb 6
  
  va := 22
  vb += 9
  i := o
  sprite va vb 6
  va += 5
  i := v
  sprite va vb 6
  va += 6
  i := e
  sprite va vb 6
  va += 5
  i := r
  sprite va vb 6
  
  loop
    v2 := 0
    v2 := key
    if v2 != 0 then jump endGame
  again
  
  
  
: endGame
	clear
  va := 4
  vb := 8
	i := L
  sprite va vb 8
  va += 5
  i := mainMenuO
  sprite va vb 6
  va += 6
  i := A
  sprite va vb 6
  va += 6
  i := D
  sprite va vb 6
  
  va := 4
  vb += 10
  i := G
  sprite va vb 6
  va += 6
  i := A
  sprite va vb 6
  va += 6
  i := M
  sprite va vb 6
  va += 6
  i := E
  sprite va vb 6
  
  va := 31
  vb := 0
  i := ball
  loop
  	sprite va vb 1
    vb += 1
  if vb != 32 then again
  
  va := 36
  vb := 5
	i := P
  sprite va vb 8
  va += 5
  i := R
  sprite va vb 6
  va += 6
  i := E
  sprite va vb 6
  va += 5
  i := S
  sprite va vb 6
  va += 6
  i := S
  sprite va vb 6
  
  va := 40
  vb += 6
  i := S
  sprite va vb 6
  va += 8
  i := T
  sprite va vb 6
  va += 6
  i := mainMenuO
  sprite va vb 6
 
 	va := 39
  vb += 6
  i := P
  sprite va vb 6
  va += 5
  i := L
  sprite va vb 6
  va += 5
  i := A
  sprite va vb 6
  va += 6
  i := mainMenuY
  sprite va vb 6
  
  va := 37
  vb += 6
  i := A
  sprite va vb 6
  va += 6
  i := G
  sprite va vb 6
  va += 6
  i := A
  sprite va vb 6
  va += 6
  i := I
  sprite va vb 6
  va += 2
  i := mainMenuN
  sprite va vb 6
  
  loop
    v2 := 0
    v2 := key
    if v2 == 8 then main
  again